<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.yoanesber</groupId>
	<artifactId>graphql-employee-management</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>graphql-employee-management</name>
	<description>A robust Spring Boot application that exposes employee and department data via a powerful GraphQL API. This service supports complex relationships, including Employee-Department, Employee-Salary, and Employee-Title associations. All API access is securely protected using an API Key passed in the request headers.</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>21</java.version>
	</properties>
	<dependencies>
		<!-- Spring Boot Starter Web: for building web applications, including RESTful applications using Spring MVC. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring Boot Starter GraphQL: for building GraphQL APIs with Spring Boot. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-graphql</artifactId>
		</dependency>

		<!-- GraphQL Java Extended Scalars: a library that provides additional scalar types for GraphQL Java, such as DateTime, URL, and BigDecimal. -->
		<dependency>
			<groupId>com.graphql-java</groupId>
			<artifactId>graphql-java-extended-scalars</artifactId>
			<version>21.0</version>
		</dependency>

		<!-- Spring Boot Starter Validation: for validating Java beans using JSR-303/JSR-380 annotations. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- Spring Boot Starter Security: Provides the necessary components for securing the application. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- PostgreSQL Driver: for connecting to PostgreSQL database. -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Spring Boot Starter Data JPA: for using Spring Data JPA with Hibernate as the default JPA provider. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Lombok: for reducing boilerplate code in Java classes. -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<environmentVariables>
						<!-- # Application environment variables for development -->
						<APP_PORT>8081</APP_PORT>
						<SPRING_PROFILES_ACTIVE>development</SPRING_PROFILES_ACTIVE>

						<!-- # Database environment variables for development -->
						<SPRING_DATASOURCE_PORT>5432</SPRING_DATASOURCE_PORT>
						<SPRING_DATASOURCE_USERNAME>postgres</SPRING_DATASOURCE_USERNAME>
						<SPRING_DATASOURCE_PASSWORD>P@ssw0rd</SPRING_DATASOURCE_PASSWORD>
						<SPRING_DATASOURCE_DB>github_yoanesber</SPRING_DATASOURCE_DB>
						<SPRING_DATASOURCE_SCHEMA>employees</SPRING_DATASOURCE_SCHEMA>

						<!-- # API Key for development -->
						<APP_API_KEY>4e1f2d3a4b5c6d7e8f9g0h1i2j3k4l5m6n7o8p9</APP_API_KEY>
					</environmentVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
